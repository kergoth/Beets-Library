#!/bin/sh
# shellcheck disable=SC2002

set -e

MAX_DISCS=5
TAB=$(printf '\t')

# shellcheck source=./common.sh
. "$(dirname "$0")/common.sh"
# shellcheck source=./common-music.sh
. "$(dirname "$0")/common-music.sh"
# shellcheck source=./trap.sh
. "$(dirname "$0")/trap.sh"

usage() {
    cat >&2 <<END
$scriptname [-h]
END
    exit 2
}

process_args() {
    while getopts h opt; do
        case "$opt" in
            \? | h)
                usage
                ;;
        esac
    done
    shift $((OPTIND - 1))
}

list_track_album_dir_candidates() {
    artistdir="$(fn_sanitize "$album_artist")"
    albumdir="$(fn_sanitize "$album" "s/:$//")"
    for library_dir in ./*/; do
        for albumdir in "$album" "$(echo "$albumdir" | sed -e 's/^The \(.*\)/\1, The/')"; do
            for dartist in "$artistdir" "Various Artists" "Compilations"; do
                if [ -d "$library_dir/$dartist/$albumdir" ]; then
                    echo "$library_dir/$dartist/$albumdir"
                    continue
                fi
                for disc in $(seq 1 "$MAX_DISCS"); do
                    if [ -d "$library_dir/$dartist/Disc $disc" ]; then
                        echo "$library_dir/$dartist/Disc $disc"
                    else
                        ls="$(ls -1d "$library_dir/$dartist/Disc $disc: "* 2>/dev/null || :)"
                        if [ -n "$ls" ]; then
                            echo "$ls"
                        else
                            break
                        fi
                    fi
                done
            done
        done
    done
}

find_track() {
    list_track_album_dir_candidates | sort -u | while read -r album_dir; do
        cname="$(fn_sanitize "$name" "s/:$//" || :)"
        find "$album_dir" -iname "$tracknumber - $cname.*"
        find "$album_dir" -iname "$tracknumber - $artist - $cname.*"
        find ./*/"$album_artist" -iname "$tracknumber - $cname.*" 2>/dev/null || :
        find ./*/"$album_artist" -iname "$tracknumber - $artist - $cname.*" 2>/dev/null || :
        find . -iname "$tracknumber - $cname.*" || :
        find . -iname "$tracknumber - $artist - $cname.*" || :
    done | head -n 1
}

process_playlists() {
    for playlist; do
        info "Playlist: $playlist"
        plist-to-json "$playlist" >"$tmpdir/playlist.json"
        # FIXME: do the join on this in jq itself
        cat "$tmpdir/playlist.json" \
            | jq '.[0].Playlists[0]["Playlist Items"] | .[]."Track ID"' >"$tmpdir/trackids"
        cat "$tmpdir/playlist.json" \
            | jq '.[].Tracks | .[] | [."Track ID", ."Album Artist", .Album, ."Disc Number", ."Track Number", .Artist, .Name] | join("\t")' -r | sort -n >"$tmpdir/tracks"
        # info "Track IDs: $(cat "$tmpdir/trackids" | xargs)"
        outname="${playlist##*/}"
        outname="${outname%.xml}"
        cat "$tmpdir/trackids" \
            | while read -r id; do
                grep "^$id$TAB" "$tmpdir/tracks"
            done \
            | grep -v '^$' \
            | sed -e "s/$TAB/$TAB /g; s/$TAB \\([^$TAB]\\)/$TAB\\1/g" \
            | while IFS="$TAB" read -r id album_artist album discnumber tracknumber artist name; do
                if [ "$artist" = " " ]; then
                    artist=
                fi
                if [ "$album_artist" = " " ]; then
                    album_artist="$artist"
                fi
                if [ "$discnumber" = " " ]; then
                    discnumber=1
                fi
                if [ -z "$name" ]; then
                    warn "No name for $id|$album_artist|$album|$discnumber|$tracknumber|$artist|$name"
                    continue
                fi
                echo "# artist=$artist|album=$album|title=$name"
                if [ -n "$artist" ]; then
                    artist="$(echo "$artist" | tr -d '!' | sed -e 's, *([^|]*$,,; s, *([^|]*|,|,; s, *\[[^|]*|,|,; s, *\[[^|]*$,,;')"
                    printf 'artist=%s|' "$artist"
                elif [ "$album" != " " ]; then
                    album="$(echo "$album" | tr -d '!' | sed -e 's, *([^|]*$,,; s, *([^|]*|,|,; s, *\[[^|]*|,|,; s, *\[[^|]*$,,;')"
                    printf 'album=%s|' "$album"
                fi
                echo "title=$name" \
                    | tr -d '!' \
                    | sed -e 's, *([^|]*$,,; s, *([^|]*|,|,; s, *\[[^|]*|,|,; s, *\[[^|]*$,,;'
            done >"$outname"
        if [ -s "$outname" ]; then
            info "Wrote $outname"
            rockuefort check "$outname" 2>&1 | grep WARNING
        else
            rm -f "$outname"
        fi
    done
}

main() {
    process_args "$@" || die
    shift $((OPTIND - 1))
    verbose=1

    tmpdir=$(mktemp -d -t "${0##*/}.XXXX")
    case "$BASH_VERSION" in
        '')
            trap 'rm -rf "$tmpdir"; on_exit' EXIT
            ;;
        *)
            trap 'rm -rf "$tmpdir"' EXIT
            ;;
    esac
    trap 'rm -rf "$tmpdir"; trap - INT; kill -INT 0' INT
    trap 'rm -rf "$tmpdir"; trap - TERM; kill -TERM 0' TERM

    process_playlists "$@"
}

if [ "$scriptname" = "rockuefort_from_itunes" ]; then
    main "$@"
fi
