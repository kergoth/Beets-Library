#!/bin/sh

set -e

# shellcheck source=./common-music.sh
. "$(dirname "$0")/common-music.sh"

dap_dir="$(beet get-config-path alternatives.dap.directory)"
if [ -z "$dap_dir" ]; then
    echo >&2 "Error looking up alternatives.dap.directory in beets config"
    exit 1
fi
dap_dir="$(cd "$dap_dir" && pwd -P)"

if [ "$1" = "-f" ]; then
    rm -rf "$dap_dir"/*
else
    find "$dap_dir" -type l \
        | while read -r fn; do test -e "$fn" || echo "$fn"; done \
        | tr '\n' '\0' \
        | xargs -0 rm -fv \
        | sed -e 's,^,-,'

    # Ensure we remove remnant covers of removed albums
    tmpfile=$(mktemp -t "${0##*/}.XXXX")
    trap 'rm -f "$tmpfile"' EXIT INT TERM
    beet ls -f '$artpath'"$TAB"'$alt_dap' singleton:false \^alt_dap:/Single\ Tracks/ \^alt_dap:non-album alt_dap- \
        | grep -v "^None$TAB" \
        | sed -e 's#/[^/]*$##' \
        | uniq \
        | while IFS="$TAB" read -r artpath destdir; do
            base="${artpath##*/}"
            destname="$(echo "$base" | sed -e 's/\.[0-9]\././')"
            echo "$destdir/$destname"
        done \
        | sort -u >"$tmpfile"
    find "$dap_dir" -iname cover\*.\* \
        | sort -u \
        | comm -i13 "$tmpfile" - \
        | tr '\n' '\0' \
        | xargs -0 rm -fv

    rm -rf "$dap_dir"/_Playlists
fi
beet splupdate
beet alt update dap --create
beet random -f '$alt_dap' -n 999999999 alt_dap:/Single\ Tracks/ \
    | sed -e 's#.*/DAP/#../#' >"$dap_dir/_Playlists/Random Single Tracks.m3u"
beet random -f '$alt_dap' -n 999999999 alt_dap:/Singles/ \
    | sed -e 's#.*/DAP/#../#' >"$dap_dir/_Playlists/Random Singles.m3u"
"$(dirname "$0")/update-dap-covers"

cd "$dap_dir" || exit 1
if [ -e .git ]; then
    git add . && git commit -m "Update"
fi
