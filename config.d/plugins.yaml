plugins:
  # Included Plugins

  ## Autotagger Extensions
  #  chroma: use acoustic fingerprinting to identify audio files.
  #    Passive (import).
  - chroma
  #  fromfilename: for untagged files, guess metadata from filename.
  #    Passive (import).
  - fromfilename

  ### Metadata Source Plugins
  #  discogs: include matches from the Discogs database.
  #    Passive (import).
  - discogs
  #  spotify: include matches from Spotify.
  #    Passive (import).
  - spotify

  ## Metadata
  #  acousticbrainz: get acoustic-analysis information.
  #    Passive (import) and Command (acousticbrainz).
  - acousticbrainz
  #  edit: edit metadata from a text editor.
  #    Interactive (import) and Command (edit).
  - edit
  #  embedart: embed album art images into files’ metadata.
  #    Commands (embedart, extractart, clearart).
  - embedart
  #  fetchart: fetch album cover art from various sources.
  #    Passive (import) and Command (fetchart).
  - fetchart
  #  lyrics: automatically fetch song lyrics.
  #    Passive (import) and Command (lyrics).
  - lyrics
  #  mbsync: fetch updated metadata from MusicBrainz.
  #    Command (mbsync).
  - mbsync
  #  zero: nullify fields by pattern or unconditionally.
  #    Passive (import) and Command (zero).
  - zero

  ## Path Formats and Fields
  - albumtypes
  #  bucket: group your files into bucket directories that cover different field values ranges.
  #    Template Function (%bucket).
  - bucket
  #  inline: use Python snippets to customize path format strings.
  #    Template Fields (as defined).
  - inline
  #  missing: list missing tracks.
  #    Template Fields ($missing).
  - missing
  #  the: move patterns in path formats (i.e., move “a” and “the” to the end).
  #    Template Function (%the).
  - the

  ## Interoperability
  #  badfiles: check audio file integrity.
  #    Command (bad).
  - badfiles
  #  playlist: use M3U playlists to query the beets library.
  #    Passive (path changes) and Named Query (playlist:).
  - playlist
  #  smartplaylist: generate smart playlists based on beets queries.
  #    Passive (database changes) and Command (splupdate).
  - smartplaylist

  ## Miscellaneous
  #  bareasc: search albums and tracks with bare ASCII string matching.
  #    Query Prefix (#).
  - bareasc
  #  duplicates: list duplicate tracks or albums.
  #    Command (dup).
  - duplicates
  #  export: export data from queries to a format.
  #    Command (export).
  - export
  #  fuzzy: search albums and tracks with fuzzy string matching.
  #    Query Prefix (~).
  - fuzzy
  #  info: print music files’ tags to the console.
  #    Command (info).
  - info
  #  limit: add head/tail functionality to list/ls
  #    Command (lslimit), Query Prefix (<)
  - limit
  #  random: randomly choose albums and tracks from your library.
  #    Command (random).
  - random
  #  types: declare types for flexible attributes.
  #    Passive (alters flexible attribute storage).
  - types
  #  unimported: list files in the library folder which are not in the database
  #    Command (unimported).
  - unimported


  # Community plugins

  ## Metadata Source Plugins
  #  bandcamp: include matches from Bandcamp.
  #    Passive (import).
  - bandcamp

  ## Metadata
  #  join_albums: merge albums
  #    Command (join).
  - join_albums
  #  wlg: fetch genre based on tags from various music sites
  #    Command (wlg).
  - wlg

  ## Interoperability
  #  alternatives: manage external files
  #    Command (alt).
  - alternatives

  ## Miscellaneous
  #  check: automatically checksum your files to detect corruption
  #    Passive (import, modify, write) and Command (check).
  - check
  #  copyartifacts: move non-music files during the import process
  #    Passive (import).
  - copyartifacts


  # My plugins

  ## Metadata
  #  advisory: set 'advisory' and 'albumadvisory' fields on import
  #    Passive (import).
  - advisory
  #  importinspect: inspect candidate changes when importing
  #    Interactive (import).
  - importinspect
  #  inconsistentalbumtracks: identify albums whose tracks have inconsistent album fields
  #    Command (inconsistent-album-tracks).
  - inconsistentalbumtracks
  #  last_import: record the most recent import via a flexible field
  #    Passive (import)
  - last_import
  #  modifyonimport: modify fields in imported items
  #    Passive (import, as defined).
  - modifyonimport
  #  modifytmpl: modify fields with formats/templates. TODO: Remove when #4095 is merged in beets
  #    Command (modifytmpl).
  - modifytmpl
  #  spotifyexplicit: list tracks spotify identifies as explicit/parental advisory
  #    Command (spotify-explicit).
  - spotifyexplicit
  #  zeroalbum: clear fields in albums in the database, obeying the 'zero' plugin configuration
  #    Passive.
  - zeroalbum

  ## Path Formats and Fields
  #  defaultformats: define format strings for the default list formats
  #    Template Fields ($format_album, $format_item).
  - defaultformats
  #  pathfield: add template functions for working with paths via fields
  #    Template Functions (%path, %pathfield).
  - pathfield
  #  replacefunc: add template function for applying selective replacement rules
  #    Template Function (%replace).
  - replacefunc
  #  savedformats: define saved format strings by storing them in fields
  #    Template Fields (as defined).
  - savedformats

  ## Interoperability
  #  alternativesplaylist: write playlists to the alternatives
  #    Passive (alternative update) and Command (altplaylistupdate).
  - alternativesplaylist
  ## quietthe: quiet the verbose messages from the 'the' plugin
  #    Passive.
  - quietthe

  ## Miscellaneous
  #  alias: define beet command aliases
  #    Commands (as defined).
  - alias
  #  crossquery: query across album-item boundaries
  #    Named Queries (album_has:, any_track_has:, all_tracks_have:).
  - crossquery
  #  existingqueries: named queries and query prefixes from the Beets source
  #    Named Query (any:).
  #    Query Prefixes (@ for exact match, ^ for None/null).
  - existingqueries
  #  hasart: query whether an item has embedded art
  #    Named Query (has_embedded_art:, all_tracks_have_art:).
  - hasart
  #  hookscripts: run external scripts on hook events
  - hookscripts
  #  inlinehook: run inline python on events
  - inlinehook
  #  open: open media paths with external applications
  #    Command (open).
  - open
  #  otherqueries: % prefix for non-NULL/non-None
  #    Query Prefix (%).
  - otherqueries
  #  picard: prompt choice to launch MusicBrainz Picard when importing
  #    Interactive (import).
  - picard
  #  savedqueries: define named/saved queries, and define fields using those queries
  #    Named Queries (as defined).
  #    Template Fields (as defined).
  - savedqueries

  ## Config-Specific
  #  kergoth: add template field for use with my media player
  #    Template Field (navigation_path).
  - kergoth
  #  musicsource: expect the `source` field to be set on import
  #    Passive (import).
  - musicsource
  #  soletracks: identify tracks which are the only ones we have by that artist.
  #    Command (list-sole-tracks)
  - soletracks
  #  reimportskipfields: allow certain set_fields to apply to skipped items on reimport
  #    Passive (import, as defined).
  - reimportskipfields

  ## Disabled
  #  nowrite: prevent write or move of media files in the library
  #    Passive.
  # - nowrite
