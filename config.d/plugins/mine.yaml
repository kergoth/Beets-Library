## Metadata

importinspect:
  ignored:
    - day
    - month
    - original_day
    - original_month
  ignored_new:
    # When inspecting candidates, it's a given that release fields will
    # be added, and a number of these are shown already by the import interface,
    # so focus on non-release fields. Changes to existing release fields will still
    # be shown, as that's useful when retagging an existing item.
    - albumstatus
    - asin
    - barcode
    - catalognumber
    - catalognum
    - country
    - data_source
    - discogs_albumid
    - isrc
    - label
    - language
    - mb_albumartistid
    - mb_albumid
    - mb_artistid
    - mb_releasegroupid
    - mb_releasetrackid
    - mb_trackid
    - mb_workid
    - media
    - releasecountry
    - releasestatus
    - script

inconsistentalbumtracks:
  ignored_fields: added genre language r128_album_gain r128_album_peak rg_album_gain rg_album_peak original_year

modifyonimport:
  modify_album:
    # Sane default for albumartist_sort
    'albumartist_sort::"^$" albumartist::.': 'albumartist_sort=%the{$albumartist}'
    # Need albumtypes
    'albumtype::. albumtypes::"^$"': 'albumtypes=$albumtype'
    # Likely a single
    'albumtotal:1 albumtype::"^(|other)$"': 'albumtype=single albumtypes=$single_albumtypes'
    # 'Various Artists' albums not flagged as compilations
    'album_query:is_various_not_comp': 'comp=1'
    # Genre
    'genre:Holiday': 'genre=Christmas'
    'genre:game': 'avmedia="Video Games"'
  modify_album_items:
    '':
      # Sane default for artist_sort
      'artist_sort::"^$" artist::"^The "': 'artist_sort=%the{$artist}'
      # Genre
      'genre:Holiday': 'genre=Christmas'
      'genre:game': 'avmedia="Video Games"'
  modify_singleton:
    # Sane default for artist_sort
    'artist_sort::"^$" artist::.': 'artist_sort=%the{$artist}'
    # Clear out the album field for imported singletons
    'album::.': 'album='
    # Genre
    'genre:Holiday': 'genre=Christmas'
    'genre:game': 'avmedia="Video Games"'

## Path Formats and Fields
# Replacements for replaceformat. To be replaced by rewrite support in the `alternatives` plugin.
adjust_franchise:
  'The Legend of Zelda': 'Zelda'

adjust_album:
  # Consistency
  'Video Games Live, Volume One': 'Video Games Live: Level 1'
  'Computec Edition Vol. 1': 'Computec Edition, Vol. 1'
  'Kentucky Route Zero, Act II': 'Kentucky Route Zero - Act II'
  'HGTV / Paste': 'HGTV & Paste'
  # Add missing # in the series
  'Quest for Glory: Shadows of Darkness': 'Quest for Glory IV: Shadows of Darkness'
  # Shorten album length
  'Command & Conquer∶ Red Alert': 'Red Alert'
  'Command & Conquer: Red Alert': 'Red Alert'
  'Firefly: Original Television Soundtrack': 'Firefly'
  'Forrest Gump: The Soundtrack': 'Forrest Gump'
  'Game of Thrones: Music From the HBO Series': 'Game of Thrones'
  'Gladiator: Music From the Motion Picture': 'Gladiator'
  'Indie Game: The Movie \(soundtrack\)': 'Indie Game: The Movie'
  'Moana: Original Motion Picture Soundtrack': 'Moana'
  'Mortal Kombat: Original Motion Picture Soundtrack': 'Mortal Kombat'
  'O Brother, Where Art Thou\? Music From a Film by Joel Coen & Ethan Coen': 'O Brother, Where Art Thou?'
  'Office Space: Motion Picture Soundtrack': 'Office Space'
  'The Chronicles of Riddick: Assault on Dark Athena': 'Riddick'
  'The Elder Scrolls IV: Morrowind': 'Morrowind'
  'The Elder Scrolls V: Skyrim': 'Skyrim'
  'The Incredible Adventures of Van Helsing': 'Van Helsing'
  'Quest for Glory IV: Shadows of Darkness': 'Quest for Glory IV'

adjust_artist:
  # Deal with non-alphanumeric sort issues when browsing
  ':wumpscut:': 'wumpscut'
  '\.mpegasus': 'mpegasus'
  '_ensnare_': 'ensnare'
  '“Weird Al” Yankovic': 'Weird Al Yankovic'

  # Remove featuring artists for navigation
  ' ([fF]([eE][aA])?[tT]\.|w[/／]) .*': ''

  # Multi-artist
  ' / .*': ''
  ' *[,;](?! *Jr).*': ''
  'Chris Ballew and .*': 'Chris Ballew'

  # Consistency
  'George Alistair Sanger': 'George Sanger'

  # Ease navigation
  'Amanda Palmer \+ The Grand Theft Orchestra': 'Amanda Palmer'
  'Amanda Palmer & The Grand Theft Orchestra': 'Amanda Palmer'
  'Bob Seger & the Silver Bullet Band': 'Bob Seger'
  'Ben Harper With Charlie Musselwhite': 'Ben Harper'
  'Bob Marley & The Wailers': 'Bob Marley'
  'Stafford Bawler + Todd Baker': 'Stafford Bawler'

# These replacements improve the visuals and navigation on the media player
adjust_dap:
  # Marks I don't care about
  ' *[™®©](?![a-zA-Z])': ''

  # Visual cleanup
  '[\x00-\x1f]': _
  '^\s+': ''
  '\s+$': ''

  # Revert asciify for certain chars
  '\.\.\.': '…'

  # Bad font rendering for these characters on the Shanling M0 DAP
  '“': '"'
  '”': '"'
  '‘': "'"
  '’': "'"

item_formats:
  # Unasciified, credited artist
  path_filename: '%if{$album,$disc_and_track_pre}%if{$comp,%if{$artist_credit,$artist_credit,$artist} - }$full_title'

  # Path format components
  artist_title: '%the{$path_artist} - $full_title'
  path_artist: '%asciify{%replace{adjust_artist,$artist}}'
  full_title: '$title%if{$e_advisory,$explicit_or_clean}'
  comp_filename: '%if{$album,$disc_and_track_pre}%if{$comp,$path_artist - }$full_title'

  albumsuffix: '%if{$e_albumadvisory, (Explicit)}'
  albumname: '%replace{adjust_album,$album%aunique{}$albumsuffix}'
  albumartistname: '%replace{adjust_artist,%if{$comp,Compilations,$albumartist}}'
  franchisename: '%replace{adjust_franchise,$franchise} Franchise'
  medianame: '%replace{adjust_album,$mediatitle}%ifdef{mediatitledisambig, [$mediatitledisambig]}%if{$album,$albumsuffix}'

  # Directories
  albumdir: '%if{$album,%the{$albumname},Single Tracks}'
  albumartistdir: '%if{$album,%the{%asciify{$albumartistname}},$artistdir}'
  artistdir: '%the{$path_artist}'
  franchisedir: '%the{$franchisename}'
  mediadir: '%the{$medianame}'
  media_albumdir: '%ifdef{media,$mediadir,$albumdir}'

## Interoperability

alternativesplaylist:
  auto: True
  is_relative: true
  relative_to: playlist
  playlist_dir: _Playlists

## Miscellaneous

alias:
  aliases:
    # Utilities
    # $ beet get-config alias.aliases.reimport
    get-config: '!sh -c "for arg; do beet config | yq e \".$arg\" -; done" -'
    # $ beet get-config-path library
    get-config-path: '!sh -c "p=\"$(beet config | yq e \".$1\" -)\"; cd \"${BEETSDIR:-~/.config/beets}\" && abspath \"$p\"" -'

    # Latest additions
    recent-albums: ls -a -f '$added $format_album' 'added-'
    recent: ls -f '$added $format_item' 'added-'
    last-week: ls -f '$added $format_item' 'added-' 'added:-7d..'
    last-month: ls -f '$added $format_item' 'added-' 'added:-30d..'

    # Reimport unidentified items
    reimport-mb: import -L mb_albumid:@

    # Strip release-specific tags. Useful in cases where the precise release
    # is unknown, or is not in MusicBrainz yet.
    norelease: modify 'asin!' 'isrc!' 'barcode!' 'catalognumber!' 'label!' 'media!' 'releasecountry!' 'releasestatus!' 'mb_albumid!' 'mb_workid!' 'mb_trackid!' 'mb_releasetrackid!' 'mb_releasegroupid!'

    # Extract embedded art only for albums missing a cover art file
    extract-missing-art: extractart -a artpath:^

    # Clear embedded art from albums that have an artpath
    clearart-albums: clearart album_id::. ^artpath:^

    # Mac-specific
    reveal: open -R --
    picard: 'open -A "-a MusicBrainz\ Picard" --'
    vlc: 'open -A "-a VLC" --'

    # Complete non-game/non-christmas albums with more than one track
    non-game-albums: ls -a existing:2.. missing:0 ^query:is_game ^query:is_christmas

    # Very basic dupe check for albums lacking musicbrainz data, primarily
    simple-dupe-check: 'dup -Fa -k albumartist -k album -k disctotal -k albumtotal -f "[$id] $albumartist - $album - $existing/$albumtotal via $source"'
    dup-albums: dup -aF
    dup-games: dup -f '$franchise - $mediatitle - $mediatitledisambig | $format_album' -F -k franchise -k mediatitle -k mediatitledisambig query:is_game ^mediatitle:^

    music: ls \^query:is_non_music
    singletons: ls singleton:true
    complete: ls -a missing:0
    high-res: albums-for samplerate:96000..

    # Show incomplete albums, skipping any albums where I only have one track
    incomplete-albums: 'ls -a -f "[$id] $albumartist - $album $existing/$albumtotal" missing:1.. \^query:is_game one_track:0'
    incomplete-games: 'ls -a -f "[$id] $albumartist - $album $existing/$albumtotal" missing:2.. one_track:0 query:is_game'

    # Red flags
    empty-artist: ls artist:@
    empty-album: ls album:@ singleton:false
    book-not-audiobook: ls genre:book ^albumtypes:audiobook
    unknown-source: ls source:Unknown , source:@
    excess-tracks: 'ls -f "$format_item $track/$tracktotal via $source" excess_tracks:1'
    negative-missing: 'ls -a -f "$missing - $format_album" missing:..-1'

    # Potential concerns
    missing-albumtotal: 'ls -a -f "$format_album $existing_by_disc" one_track:false albumtotal:0'
    # This is automatically corrected in modifyonimport
    various-not-comp: ls -a album_query:is_various_not_comp

    # Informative
    non-mb-albums: ls -a mb_albumid:@
    possible-singles: ls -a albumtotal:1 albumtypes::'^(|other)$'
    possible-not-comp: ls -a comp:1 missing:0 is_comp_same_artists:1
    # These are often not an issue, just albums which feature multiple
    # artists, but aren't compilations. Cases where the album artist is the
    # producer, cases where there are featuring artist, etc.
    multiartist-not-comp: ls -a comp:0 multiartist:1
    has-multiple-genres: ls -a -f '$album_genres $format_album' all_same_genres:0s

hookscripts:
  hookspath:
    - '../hooks'
  hooks:
    - alternatives_before_update
    - alternatives_after_update
    - album_imported
    - item_imported
  args:
    alternatives_before_update: 'alternative.name, alternative.directory'
    alternatives_after_update: 'alternative.name, alternative.directory'
    album_imported: 'str(album.id)'
    item_imported: 'str(item.id)'
    # Unused
    import: '*paths'

inlinehook:
  hooks:
    - event: 'album_imported'
      handler: |
        from beets.ui import UserError, log

        log.info(f'Running sanity checks on album {album}')

        items = album.items()
        if not album.albumtotal:
          log.warning(f'No track total found for {album}')
        elif len(items) > album.albumtotal:
          log.warning(f'Excess items ({len(items)} > {album.albumtotal}) for {album}')

        for item in items:
          if not item.artist:
            log.warning(f'Artist not set for {item}')
          if item.genre.lower() == 'book' and 'audiobook' not in item.albumtypes:
            log.warning(f'Genre is `book`, but `albumtypes` does not include `audiobook` for {item}')

    - event: 'item_imported'
      handler: |
        from beets.ui import UserError, log

        log.info(f'Running sanity checks on item {item}')

        if not item.artist:
          log.warning(f'Artist not set for {item}')

album_queries:
  is_game: 'avmedia:"Video Games"'
  is_sampler: 'albumtypes:sampler , album:sampler'
  is_incomplete_album: 'album_query:is_game missing:2.. , ^album_query:is_game missing:1..'

  # This is used both in an alias command and modifyonimport
  is_various_not_comp: 'comp:0 albumartist:@"Various Artists"'

item_queries:
  # Used by the sole-tracks script
  sole_track_candidates: 'query:is_music \^query:is_mfp \^query:is_ocremix \^query:is_game'
  is_mfp: 'label:"Music for Programming"'
  is_ocremix: 'label:"OverClocked ReMix"'

  # As-needed
  is_incomplete_album: 'query:is_game missing:2.. , ^query:is_game missing:1..'
  albums_to_split_up: 'query:is_incomplete_album existing:..4'
  is_loved: album_loved:true , loved:true query:for_single_tracks

  # General and Path Formats
  is_music: '^query:is_non_music'
  is_non_music: 'genre:speech , genre:meditation , genre:dharma , genre:book , genre:spoken , genre:background , albumtypes:spokenword , albumtypes:audiobook , albumtypes:"audio drama" , albumtypes:interview'
  is_sampler: 'albumtypes:sampler , album:sampler'
  is_christmas: 'genre:Christmas'
  is_classical: 'genre:Classical'
  is_game: 'avmedia:"Video Games"'
  is_soundtrack: 'albumtypes:soundtrack , genre:soundtrack ^query:is_sampler'
  is_sole_track: 'sole_track:true'
  for_single_tracks: 'singleton:true , albumtypes:single albumtotal:1 , single_track:true'

  # Categories
  classical: 'query:is_classical ^loved:true ^composer:"Christopher Tin" ^query:is_game ^query:is_sampler ^query:is_soundtrack'
  alt_game: 'query:is_game albumtypes:soundtrack , query:is_game ^mediatitle:^'
  alt_game_extra: '^albumtypes:soundtrack query:is_game'
  loved_single_tracks: 'loved:true query:for_single_tracks'
  soundtrack: 'query:is_soundtrack ^query:for_single_tracks'
  sampler: 'query:is_sampler ^query:for_single_tracks'

## Config-Specific

reimportskipfields:
  set_fields: reimported
